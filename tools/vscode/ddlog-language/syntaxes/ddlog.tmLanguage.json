{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "ddlog",
    "scopeName": "source.ddlog",
    "patterns": [
        {
            "include": "#comment"
        },
        {
            "include": "#constant"
        },
        {
            "include": "#entity"
        },
        {
            "include": "#meta"
        },
        {
            "include": "#punctuation"
        },
        {
            "include": "#string"
        },
        {
            "include": "#support"
        },
        {
            "include": "#type"
        },
        {
            "include": "#variable"
        },
        {
            "include": "#operator"
        },
        {
            "include": "#keyword"
        },
        {
            "include": "#storage"
        }
    ],
    "repository": {
        "constant": {
            "patterns": [
                {
                    "comment": "Floating point literal (without exponent)",
                    "name": "constant.numeric.float.ddlog",
                    "match": "\\b(32'f|64'f)?[0-9][0-9_]*\\.[0-9][0-9_]*([eE][+-]?[0-9_]+)?\\b"
                },
                {
                    "comment": "Floating point literal (exponent)",
                    "name": "constant.numeric.float.ddlog",
                    "match": "\\b(32'f|64'f)?([0-9][0-9_]*\\.)?[0-9][0-9_]*[eE][+-][0-9_]+\\b"
                },
                {
                    "comment": "Integer literal (hexadecimal)",
                    "name": "constant.numeric.integer.hexadecimal.ddlog",
                    "match": "\\b((\\d+')?[s]?[h]\\s*[a-fA-F0-9_]+)\\b"
                },
                {
                    "comment": "Integer literal (octal)",
                    "name": "constant.numeric.integer.octal.ddlog",
                    "match": "\\b((\\d+')?[s]?[o]\\s*[0-7_]+)\\b"
                },
                {
                    "comment": "Integer literal (binary)",
                    "name": "constant.numeric.integer.binary.ddlog",
                    "match": "\\b((\\d+')?[s]?[b]\\s*[01_]+)\\b"
                },
                {
                    "comment": "Integer literal (decimal)",
                    "name": "constant.numeric.integer.decimal.ddlog",
                    "match": "\\b(((\\d+')?[s]?[d])?\\s*[0-9_]+)\\b"
                },
                {
                    "name": "constant.language.boolean.ddlog",
                    "match": "\\b(true|false)\\b"
                }
            ]
        },
        "keyword": {
            "patterns": [
                {
                    "name": "keyword.control.ddlog",
                    "match": "\\b(else|if|in|for|return|control|skip|continue|break|function|match)\\b"
                },
                {
                    "name": "keyword.graph.ddlog",
                    "match": "\\b(input|output|relation)\\b"
                },
                {
                    "name": "keyword.module.ddlog",
                    "match": "\\b(import|extern|as)\\b"
                },
                {
                    "name": "keyword.type.ddlog",
                    "match": "\\b(typedef|type)\\b"
                },
                {
                    "name": "keyword.special.ddlog",
                    "match": "\\b(Aggregate|FlatMap)\\b"
                },
                {
                    "name": "keyword.other.ddlog",
                    "match": "\\b(group_by|primary key)\\b"
                },
                {
                    "name": "keyword.variable.ddlog",
                    "match": "\\b(var)\\b"
                }
            ]
        },
        "meta": {
            "patterns": [
                {
                    "name": "meta.function-definition.ddlog",
                    "begin": "\\b(function)\\s+([a-z_][a-zA-Z0-9_]*)",
                    "beginCaptures": {
                        "1": {
                            "name": "keyword.control.ddlog"
                        },
                        "2": {
                            "name": "entity.name.function.ddlog"
                        }
                    },
                    "end": "[\\{]",
                    "endCaptures": {
                        "0": {
                            "name": "keyword.operator.alternate-grouping.ddlog"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#comment"
                        },
                        {
                            "include": "#constant"
                        },
                        {
                            "include": "#entity"
                        },
                        {
                            "include": "#meta"
                        },
                        {
                            "include": "#punctuation"
                        },
                        {
                            "include": "#string"
                        },
                        {
                            "include": "#support"
                        },
                        {
                            "include": "#type"
                        },
                        {
                            "include": "#variable"
                        },
                        {
                            "include": "#operator"
                        },
                        {
                            "include": "#keyword"
                        },
                        {
                            "include": "#storage"
                        }
                    ]
                },
                {
                    "name": "meta.extern-function.ddlog",
                    "begin": "\\b(extern function)\\s+([a-z_][a-zA-Z0-9_]+)",
                    "beginCaptures": {
                        "1": {
                            "name": "keyword.control.ddlog"
                        },
                        "2": {
                            "name": "entity.name.function.ddlog"
                        },
                        "3": {
                            "name": "keyword.operator.grouping.ddlog"
                        }
                    },
                    "end": "\\(",
                    "endCaptures": {
                        "0": {
                            "name": "keyword.operator.grouping.ddlog"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#comment"
                        },
                        {
                            "include": "#constant"
                        },
                        {
                            "include": "#entity"
                        },
                        {
                            "include": "#meta"
                        },
                        {
                            "include": "#punctuation"
                        },
                        {
                            "include": "#string"
                        },
                        {
                            "include": "#support"
                        },
                        {
                            "include": "#type"
                        },
                        {
                            "include": "#variable"
                        },
                        {
                            "include": "#operator"
                        },
                        {
                            "include": "#keyword"
                        },
                        {
                            "include": "#storage"
                        }
                    ]
                },
                {
                    "name": "meta.function-param.ddlog",
                    "begin": "(?<=(\\b)([a-z_][a-zA-Z0-9_]+))(\\()",
                    "end": "(\\))",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.type.ddlog"
                        }
                    },
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.type.ddlog"
                        }
                    },
                    "patterns": [
                        {
                            "name": "meta.function-param.ddlog",
                            "begin": "(?<=(\\b)([a-z_][a-zA-Z0-9_]+))(\\()",
                            "end": "(\\))",
                            "beginCaptures": {
                                "0": {
                                    "name": "punctuation.definition.type.ddlog"
                                }
                            },
                            "endCaptures": {
                                "0": {
                                    "name": "punctuation.definition.type.ddlog"
                                }
                            }
                        },
                        {
                            "name": "variable.parameter.ddlog",
                            "match": "(?<![:] )([a-z_][a-zA-Z0-9_]+)"
                        },
                        {
                            "name": "variable.parameter.ddlog",
                            "match": "(?<![:] )([a-z_]+)"
                        },
                        {
                            "name": "variable.parameter.ddlog",
                            "match": "(?<![:])([a-z_][a-zA-Z0-9_]+)"
                        },
                        {
                            "name": "variable.parameter.ddlog",
                            "match": "(?<![:])([a-z_]+)"
                        },
                        {
                            "include": "#comment"
                        },
                        {
                            "include": "#constant"
                        },
                        {
                            "include": "#entity"
                        },
                        {
                            "include": "#meta"
                        },
                        {
                            "include": "#punctuation"
                        },
                        {
                            "include": "#string"
                        },
                        {
                            "include": "#support"
                        },
                        {
                            "include": "#type"
                        },
                        {
                            "include": "#variable"
                        },
                        {
                            "include": "#operator"
                        },
                        {
                            "include": "#keyword"
                        },
                        {
                            "include": "#storage"
                        }
                    ]
                },
                {
                    "name": "meta.function-param.ddlog",
                    "begin": "(?<=(\\b)([a-z_]))(\\()",
                    "end": "(\\))",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.type.ddlog"
                        }
                    },
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.type.ddlog"
                        }
                    },
                    "patterns": [
                        {
                            "name": "meta.function-param.ddlog",
                            "begin": "(?<=(\\b)([a-z_]))(\\()",
                            "end": "(\\))",
                            "beginCaptures": {
                                "0": {
                                    "name": "punctuation.definition.type.ddlog"
                                }
                            },
                            "endCaptures": {
                                "0": {
                                    "name": "punctuation.definition.type.ddlog"
                                }
                            }
                        },
                        {
                            "name": "variable.parameter.ddlog",
                            "match": "(?<![:] )([a-z_][a-zA-Z0-9_]+)"
                        },
                        {
                            "name": "variable.parameter.ddlog",
                            "match": "(?<![:] )([a-z_]+)"
                        },
                        {
                            "name": "variable.parameter.ddlog",
                            "match": "(?<![:])([a-z_][a-zA-Z0-9_]+)"
                        },
                        {
                            "name": "variable.parameter.ddlog",
                            "match": "(?<![:])([a-z_]+)"
                        },
                        {
                            "include": "#comment"
                        },
                        {
                            "include": "#constant"
                        },
                        {
                            "include": "#entity"
                        },
                        {
                            "include": "#meta"
                        },
                        {
                            "include": "#punctuation"
                        },
                        {
                            "include": "#string"
                        },
                        {
                            "include": "#support"
                        },
                        {
                            "include": "#type"
                        },
                        {
                            "include": "#variable"
                        },
                        {
                            "include": "#operator"
                        },
                        {
                            "include": "#keyword"
                        },
                        {
                            "include": "#storage"
                        }
                    ]
                }
            ]
        },
        "punctuation": {
            "patterns": [
                {
                    "name": "punctuation.other.comma.ddlog",
                    "match": ","
                },
                {
                    "name": "punctuation.other.delimiter.ddlog",
                    "match": "(\\:-)"
                }
            ]
        },
        "string": {
            "patterns": [
                {
                    "name": "constant.character.escape.ddlog",
                    "match": "\\\\[0nrvtbfa]"
                },
                {
                    "name": "constant.other.placeholder.ddlog",
                    "match": "(\\{)([a-zA-Z0-9_?:$.*<>]+)?(\\})"
                },
                {
                    "name": "string.quoted.double.ddlog",
                    "begin": "\"",
                    "end": "\"",
                    "patterns": [
                        {
                            "name": "constant.character.escape.ddlog",
                            "match": "\\\\[0nrvtbfa]"
                        },
                        {
                            "name": "constant.other.placeholder.ddlog",
                            "match": "(\\{)([a-zA-Z0-9_?:$.*<>]+)?(\\})"
                        },
                        {
                            "name": "string.quoted.interpolated.ddlog",
                            "begin": "(\\{)",
                            "beginCaptures": {
                                "1": {
                                    "name": "keyword.operator.alternate-grouping.ddlog"
                                }
                            },
                            "end": "\\}",
                            "endCaptures": {
                                "0": {
                                    "name": "keyword.operator.alternate-grouping.ddlog"
                                }
                            },
                            "patterns": [
                                {
                                    "include": "#comment"
                                },
                                {
                                    "include": "#constant"
                                },
                                {
                                    "include": "#entity"
                                },
                                {
                                    "include": "#meta"
                                },
                                {
                                    "include": "#punctuation"
                                },
                                {
                                    "include": "#string"
                                },
                                {
                                    "include": "#support"
                                },
                                {
                                    "include": "#type"
                                },
                                {
                                    "include": "#variable"
                                },
                                {
                                    "include": "#operator"
                                },
                                {
                                    "include": "#keyword"
                                },
                                {
                                    "include": "#storage"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "string.quoted.double.raw.ddlog",
                    "begin": "(\\[)(\\|)",
                    "end": "(\\|)(\\])",
                    "patterns": [
                        {
                            "name": "constant.character.escape.ddlog",
                            "match": "\\\\[0nrvtbfa]"
                        },
                        {
                            "name": "constant.other.placeholder.ddlog",
                            "match": "(\\{)([a-zA-Z0-9_?:$.*<>]+)?(\\})"
                        },
                        {
                            "name": "string.quoted.interpolated.ddlog",
                            "begin": "(\\{)",
                            "beginCaptures": {
                                "1": {
                                    "name": "keyword.operator.alternate-grouping.ddlog"
                                }
                            },
                            "end": "\\}",
                            "endCaptures": {
                                "0": {
                                    "name": "keyword.operator.alternate-grouping.ddlog"
                                }
                            },
                            "patterns": [
                                {
                                    "include": "#comment"
                                },
                                {
                                    "include": "#constant"
                                },
                                {
                                    "include": "#entity"
                                },
                                {
                                    "include": "#meta"
                                },
                                {
                                    "include": "#punctuation"
                                },
                                {
                                    "include": "#string"
                                },
                                {
                                    "include": "#support"
                                },
                                {
                                    "include": "#type"
                                },
                                {
                                    "include": "#variable"
                                },
                                {
                                    "include": "#operator"
                                },
                                {
                                    "include": "#keyword"
                                },
                                {
                                    "include": "#storage"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "type": {
            "patterns": [
                {
                    "match": "\\b([A-Za-z][_A-Za-z0-9]+)\\b(?=<[_a-zA-Z']+>)",
                    "name": "entity.name.type.ddlog"
                },
                {
                    "name": "entity.name.type.param.ddlog",
                    "begin": "<(?![=<])",
                    "end": "(?<![-])>",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.type.ddlog"
                        }
                    },
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.type.ddlog"
                        }
                    },
                    "patterns": [
                        {
                            "name": "entity.name.type.param.ddlog",
                            "begin": "<(?![=<])",
                            "end": "(?<![-])>",
                            "beginCaptures": {
                                "0": {
                                    "name": "punctuation.definition.type.ddlog"
                                }
                            },
                            "endCaptures": {
                                "0": {
                                    "name": "punctuation.definition.type.ddlog"
                                }
                            }
                        },
                        {
                            "match": "\\b([A-Za-z][_A-Za-z0-9]+)\\b(?=<[_a-zA-Z']+>)",
                            "name": "entity.name.type.ddlog"
                        },
                        {
                            "match": "('[A-Z][a-zA-Z0-9_]*)",
                            "name": "entity.name.type-variable.ddlog"
                        },
                        {
                            "name": "storage.type.ddlog",
                            "match": "\\b(typedef|type)\\b"
                        },
                        {
                            "name": "punctuation.other.comma.ddlog",
                            "match": ","
                        },
                        {
                            "name": "storage.modifier.mutable.ddlog",
                            "match": "\\b(mut)\\b"
                        },
                        {
                            "name": "storage.type.function.ddlog",
                            "match": "\\b(function)\\b"
                        },
                        {
                            "name": "storage.type.ddlog",
                            "match": "\\b(bigint|bool|string|bit|signed|double|float)\\b"
                        }
                    ]
                },
                {
                    "name": "entity.name.type.relation-type.ddlog",
                    "begin": "(?<=([A-Z0-9_][a-zA-Z0-9_]*))(\\[)",
                    "end": "(\\])",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.type.ddlog"
                        }
                    },
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.type.ddlog"
                        }
                    },
                    "patterns": [
                        {
                            "name": "entity.name.type.relation-type.ddlog",
                            "begin": "(?<=([A-Z0-9_][a-zA-Z0-9_]*))(\\[)",
                            "end": "(\\])",
                            "beginCaptures": {
                                "0": {
                                    "name": "punctuation.definition.type.ddlog"
                                }
                            },
                            "endCaptures": {
                                "0": {
                                    "name": "punctuation.definition.type.ddlog"
                                }
                            }
                        },
                        {
                            "match": "\\b([A-Za-z][_A-Za-z0-9]+)\\b(?=<[_a-zA-Z']+>)",
                            "name": "entity.name.type.ddlog"
                        },
                        {
                            "match": "('[A-Z][a-zA-Z0-9_]*)",
                            "name": "entity.name.type-variable.ddlog"
                        },
                        {
                            "name": "storage.type.ddlog",
                            "match": "\\b(typedef|type)\\b"
                        },
                        {
                            "name": "punctuation.other.comma.ddlog",
                            "match": ","
                        },
                        {
                            "name": "storage.modifier.mutable.ddlog",
                            "match": "\\b(mut)\\b"
                        },
                        {
                            "name": "storage.type.function.ddlog",
                            "match": "\\b(function)\\b"
                        },
                        {
                            "name": "storage.type.ddlog",
                            "match": "\\b(bigint|bool|string|bit|signed|double|float)\\b"
                        }
                    ]
                }
            ]
        },
        "variable": {
            "patterns": [
                {
                    "name": "variable.parameter.ddlog",
                    "match": "([a-z_][a-zA-Z0-9_]+)(?=[:] )"
                },
                {
                    "name": "variable.parameter.ddlog",
                    "match": "([a-z_]+)(?=[:] )"
                },
                {
                    "name": "variable.local.ddlog",
                    "match": "\\b(?<=var)(\\s)([a-z_][a-zA-Z0-9_]*)"
                },
                {
                    "name": "variable.local.ddlog",
                    "match": "\\b(?<=var)(\\S)([a-z_][a-zA-Z0-9_]*)"
                },
                {
                    "name": "variable.local.ddlog",
                    "match": "\\b([a-z_][a-zA-Z0-9_]*)(\\s)(?=in)"
                },
                {
                    "name": "variable.language.ddlog",
                    "match": "\\b(_)\\b"
                },
                {
                    "name": "variable.other.ddlog",
                    "match": "([a-z_][a-zA-Z0-9_]*)\\s(?==)(?![=])"
                },
                {
                    "match": "([a-z_]\\s)(?==)(?![=])",
                    "captures": {
                        "1": {
                            "name": "variable.other.ddlog"
                        }
                    }
                }
            ]
        },
        "comment": {
            "patterns": [
                {
                    "name": "comment.block.ddlog",
                    "begin": "/\\*",
                    "end": "\\*/"
                },
                {
                    "name": "comment.line.double-slash.ddlog",
                    "begin": "//",
                    "end": "$"
                }
            ]
        },
        "entity": {
            "patterns": [
                {
                    "match": "(\\b)(?<=relation)(\\s)([A-Z0-9_][a-zA-Z0-9_]+)",
                    "name": "entity.name.relation.ddlog"
                },
                {
                    "match": "(\\b)(?<=relation)(\\s)([A-Z0-9_]*)",
                    "name": "entity.name.relation.ddlog"
                },
                {
                    "match": "\\b(?<=function)(\\b)([a-z_][a-zA-Z0-9_]*)",
                    "name": "entity.name.function.ddlog",
                    "captures": {
                        "1": {
                            "name": "keyword.operator.group.parameters.ddlog"
                        }
                    }
                },
                {
                    "match": "(\\b)([a-z_][a-zA-Z0-9_]+)(?=[(])",
                    "name": "entity.name.function.ddlog",
                    "captures": {
                        "1": {
                            "name": "keyword.operator.group.parameters.ddlog"
                        }
                    }
                },
                {
                    "match": "(\\b)([a-z_]+)(?=[(])",
                    "name": "entity.name.function.ddlog",
                    "captures": {
                        "1": {
                            "name": "keyword.operator.group.parameters.ddlog"
                        }
                    }
                },
                {
                    "match": "('[A-Z][a-zA-Z0-9_]*)",
                    "name": "entity.name.type-variable.ddlog"
                },
                {
                    "match": "(?<=(\\=))(\\s*)([A-Z][a-zA-Z0-9_]*)",
                    "name": "entity.name.constructor.ddlog"
                },
                {
                    "match": "(?<=(\\|))(\\s*)([A-Z][a-zA-Z0-9_]*)",
                    "name": "entity.name.constructor.ddlog"
                },
                {
                    "match": "(\\b)(?<=import)(\\b)([a-z_][a-zA-Z0-9_]*)",
                    "name": "entity.name.import_decl.ddlog"
                },
                {
                    "match": "\\b(?<=typedef)\\s*([a-zA-Z_][a-zA-Z0-9_]*)",
                    "name": "entity.name.type.ddlog"
                },
                {
                    "match": "\\b(?<=type)\\s*([a-zA-Z_][a-zA-Z0-9_]*)",
                    "name": "entity.name.type.ddlog"
                },
                {
                    "begin": "\\b(typedef)\\s*([a-zA-Z_][a-zA-Z0-9_]*)(=)([A-Z][a-zA-Z0-9_]+)",
                    "beginCaptures": {
                        "1": {
                            "name": "storage.type.ddlog"
                        },
                        "2": {
                            "name": "entity.name.type.ddlog"
                        },
                        "3": {
                            "name": "keyword.operator.grouping.ddlog"
                        }
                    },
                    "end": "\\(",
                    "endCaptures": {
                        "0": {
                            "name": "keyword.operator.grouping.ddlog"
                        }
                    }
                }
            ]
        },
        "operator": {
            "patterns": [
                {
                    "name": "keyword.operator.group.parameters.ddlog",
                    "begin": "\\(",
                    "beginCaptures": {
                        "1": {
                            "name": "keyword.operator.grouping.ddlog"
                        }
                    },
                    "end": "\\)",
                    "endCaptures": {
                        "0": {
                            "name": "keyword.operator.grouping.ddlog"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#comment"
                        },
                        {
                            "include": "#constant"
                        },
                        {
                            "include": "#entity"
                        },
                        {
                            "include": "#meta"
                        },
                        {
                            "include": "#punctuation"
                        },
                        {
                            "include": "#string"
                        },
                        {
                            "include": "#support"
                        },
                        {
                            "include": "#type"
                        },
                        {
                            "include": "#variable"
                        },
                        {
                            "include": "#operator"
                        },
                        {
                            "include": "#keyword"
                        },
                        {
                            "include": "#storage"
                        }
                    ]
                },
                {
                    "name": "keyword.operator.group.block.ddlog",
                    "begin": "\\{",
                    "beginCaptures": {
                        "1": {
                            "name": "keyword.operator.alternate-grouping.ddlog"
                        }
                    },
                    "end": "\\}",
                    "endCaptures": {
                        "0": {
                            "name": "keyword.operator.alternate-grouping.ddlog"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#comment"
                        },
                        {
                            "include": "#constant"
                        },
                        {
                            "include": "#entity"
                        },
                        {
                            "include": "#meta"
                        },
                        {
                            "include": "#punctuation"
                        },
                        {
                            "include": "#string"
                        },
                        {
                            "include": "#support"
                        },
                        {
                            "include": "#type"
                        },
                        {
                            "include": "#variable"
                        },
                        {
                            "include": "#operator"
                        },
                        {
                            "include": "#keyword"
                        },
                        {
                            "include": "#storage"
                        }
                    ]
                },
                {
                    "name": "keyword.operator.type-annotation.ddlog",
                    "match": ":\\s*(?=(mut)?\\s*(bigint|bit|bool|signed|double|float|string|Vec|Ref|Set|Map)(\\b))",
                    "captures": {
                        "1": {
                            "name": "storage.modifier.mutable.ddlog"
                        },
                        "2": {
                            "name": "storage.type.ddlog"
                        }
                    }
                },
                {
                    "name": "keyword.operator.type-annotation.ddlog",
                    "match": ":\\s*(?=(\\b)(usize|u8|u16|u32|u64|u128|s8|s16|s32|s64|s128|Option|Result)(\\b))",
                    "captures": {
                        "1": {
                            "name": "storage.type.core.ddlog"
                        }
                    }
                },
                {
                    "name": "keyword.operator.type-annotation.ddlog",
                    "match": ":\\s*(?=([a-zA-Z_][a-zA-Z0-9_]+))",
                    "captures": {
                        "1": {
                            "name": "entity.name.type.ddlog"
                        }
                    }
                },
                {
                    "name": "keyword.operator.type-annotation.ddlog",
                    "match": ":\\s*(?=([a-zA-Z0-9_]+))",
                    "captures": {
                        "1": {
                            "name": "entity.name.type.ddlog"
                        }
                    }
                },
                {
                    "name": "keyword.operator.type-annotation.ddlog",
                    "match": ":\\s*(?='([A-Z][a-zA-Z0-9_]*))",
                    "captures": {
                        "1": {
                            "name": "entity.name.type-variable.ddlog"
                        }
                    }
                },
                {
                    "name": "keyword.operator.match.ddlog",
                    "match": "\\s*(->)\\s*"
                },
                {
                    "name": "keyword.operator.bitwise-negation.ddlog",
                    "match": "(\\~)"
                },
                {
                    "name": "keyword.operator.bitwise-and.ddlog",
                    "match": "(\\&)"
                },
                {
                    "name": "keyword.operator.boolean-negation.ddlog",
                    "match": "\\s(not)\\s"
                },
                {
                    "name": "keyword.operator.boolean-negation.ddlog",
                    "match": "\\b(not)\\b"
                },
                {
                    "name": "keyword.operator.concatenation.ddlog",
                    "match": "(\\+\\+)"
                },
                {
                    "name": "keyword.operator.logical-and.ddlog",
                    "match": "\\s(and)\\s"
                },
                {
                    "name": "keyword.operator.logical-and.ddlog",
                    "match": "\\b(and)\\b"
                },
                {
                    "name": "keyword.operator.logical-or.ddlog",
                    "match": "\\s(or)\\s"
                },
                {
                    "name": "keyword.operator.logical-or.ddlog",
                    "match": "\\b(or)\\b"
                },
                {
                    "name": "keyword.operator.scope.ddlog",
                    "match": "(\\::)"
                },
                {
                    "name": "keyword.operator.sequentialcomposition.ddlog",
                    "match": "(\\;)"
                },
                {
                    "name": "keyword.operator.try.ddlog",
                    "match": "(\\?)"
                },
                {
                    "name": "keyword.operator.grouping.ddlog",
                    "match": "[\\(\\)]"
                },
                {
                    "name": "keyword.operator.alternate-grouping.ddlog",
                    "match": "[\\{\\}]"
                },
                {
                    "name": "keyword.operator.cast.ddlog",
                    "match": "(as)\\s+(?=(bigint|bit|signed))"
                },
                {
                    "name": "keyword.operator.bit-slicing.ddlog",
                    "match": "(\\[([\\d]+:[\\d]+)\\])"
                },
                {
                    "name": "keyword.operator.member-access.ddlog",
                    "match": "\\s(\\.)\\b"
                },
                {
                    "name": "keyword.operator.member-access.ddlog",
                    "match": "\\b(\\.)\\b"
                },
                {
                    "name": "keyword.operator.member-access.ddlog",
                    "match": "\\B(\\.)\\b"
                },
                {
                    "name": "keyword.operator.member-access.ddlog",
                    "match": "(\\.)(?=to_string)"
                },
                {
                    "name": "keyword.operator.implication.ddlog",
                    "match": "(=>)"
                },
                {
                    "name": "keyword.operator.comparison.ddlog",
                    "match": "(\\==|!=)"
                },
                {
                    "name": "keyword.operator.assignment.ddlog",
                    "match": "(\\=)"
                },
                {
                    "name": "keyword.operator.arithmetic.ddlog",
                    "match": "(\\+|-|/|\\*|%|\\||<<|>>)"
                },
                {
                    "name": "keyword.operator.comparison.ddlog",
                    "match": "\\s(<|>)\\s"
                },
                {
                    "name": "keyword.operator.comparison.ddlog",
                    "match": "\\B(<=|>=)\\B"
                }
            ]
        },
        "storage": {
            "patterns": [
                {
                    "name": "storage.modifier.external.ddlog",
                    "match": "\\b(extern)\\b"
                },
                {
                    "name": "storage.modifier.mutable.ddlog",
                    "match": "\\b(mut)\\b"
                },
                {
                    "name": "storage.type.function.ddlog",
                    "match": "\\b(function)\\b"
                },
                {
                    "name": "storage.type.ddlog",
                    "match": "\\b(typedef|type)\\b"
                },
                {
                    "name": "storage.type.ddlog",
                    "match": "\\b(bigint|bit|bool|signed|double|float|string)\\b"
                },
                {
                    "name": "storage.type.ddlog",
                    "match": "\\b(Map|Set|Vec|Ref)\\b"
                },
                {
                    "name": "storage.type.core.ddlog",
                    "match": "\\b(usize|u8|u16|u32|u64|u128|s8|s16|s32|s64|s128|Option|Result)\\b"
                }
            ]
        },
        "support": {
            "patterns": [
                {
                    "name": "support.constant.core.ddlog",
                    "match": "\\b(None|Ok|Err)\\b"
                },
                {
                    "name": "support.constant.core.ddlog",
                    "match": "\\b(Some)"
                }
            ]
        }
    }
}